{% set name = "xgboost" %}
{% set version = "1.7.6" %}
{% set build_number = 8 %}

package:
  name: xgboost-split
  version: {{ version }}

source:
  # we have to use git urls here to get the submodules needed for the
  # build
  git_url: https://github.com/dmlc/xgboost
  git_tag: v{{ version }}
  patches:
    # xgboost patches
    - 0001-conda-Unbundle-libxgboost.-dll-dylib-so.patch
    - 0001-Force-endian-flag-in-cross-compilation-mode.patch  # [arm64 or aarch64 or ppc64le]
    - 0002-Use-static-cudart.patch
    # xref: https://github.com/dmlc/xgboost/pull/9602
    - 0003-numpy-ndarray-check.patch

build:
  number: {{ build_number }}
  skip: True  # [(linux or win) and cuda_compiler == "None"]
  skip: True  # [cuda_compiler_version == "11.2"]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler != "None" and cuda_compiler_version != "None"]
    - git                     # [not win]
    - m2-git                  # [win]
    - cmake
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
    - ninja
  host:
    - nccl         # [linux and cuda_compiler != "None"]
    - librmm       # [linux and cuda_compiler != "None"]

outputs:
  - name: libxgboost
    script: install-libxgboost.sh  # [not win]
    script: install-win-wrapper.bat  # [win]
    build:
      activate_in_script: True
      string: rapidsai_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
      ignore_run_exports_from:
        - {{ compiler('cuda') }}  # [(cuda_compiler_version or "").startswith("11")]
        - librmm                  # [linux and cuda_compiler != "None"]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}  # [cuda_compiler != "None"]
        - git
        - cmake
        - make
        - llvm-openmp  # [osx]
        - libgomp      # [linux]
      host:
        - nccl         # [linux and cuda_compiler != "None"]
        - librmm       # [linux and cuda_compiler != "None"]
      run:
        {% if (cuda_compiler_version or "").startswith("11") %}
        - cuda-version >={{ 11.2 }},<12
        {% endif %}
      run_constrained:
        - {{ pin_compatible('librmm', max_pin='x.x') }}  # [linux and cuda_compiler != "None"]

  - name: py-xgboost
    script: install-py-xgboost.sh  # [not win]
    script: install-win-wrapper.bat  # [win]
    build:
      string: rapidsai_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
      force_use_keys:
        - librmm                  # [linux and cuda_compiler != "None"]
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
      host:
        - {{ pin_subpackage('libxgboost', max_pin="x.x.x.x.x.x") }}
        - libxgboost =*=rapidsai_h*_{{ PKG_BUILDNUM }}
        - python
        - setuptools
        - pip
      run:
        - {{ pin_subpackage('libxgboost', max_pin="x.x.x.x.x.x") }}
        - libxgboost =*=rapidsai_h*_{{ PKG_BUILDNUM }}
        - python
        - numpy
        - scipy
        - scikit-learn
      test:
        script: test-py-xgboost.py
        imports:
          - xgboost

  - name: xgboost
    build:
      string: rapidsai_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
      force_use_keys:
        - librmm                  # [linux and cuda_compiler != "None"]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('py-xgboost', max_pin="x.x.x.x.x.x") }}
        - py-xgboost =*=rapidsai_py{{ CONDA_PY }}h*_{{ PKG_BUILDNUM }}

  - name: r-xgboost
    script: install-r-xgboost.sh  # [not win]
    script: install-r-xgboost.bat  # [win]
    build:
      string: rapidsai_r{{ r_base | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
      rpaths:
        - lib/R/lib
      force_use_keys:
        - librmm                  # [linux and cuda_compiler != "None"]
    requirements:
      build:
        - {{ compiler('m2w64_c') }}    # [win]
        - {{ compiler('m2w64_cxx') }}  # [win]
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - llvm-openmp                  # [osx]
        - libgomp                      # [linux]
        - git
        - make                         # [not win]
        - posix                        # [win]
        - cmake
        - ninja
        - cross-r-base {{ r_base }}    # [build_platform != target_platform]
        - r-base                       # [build_platform != target_platform]
        - r-matrix                     # [build_platform != target_platform]
        - r-data.table                 # [build_platform != target_platform]
        - r-magrittr                   # [build_platform != target_platform]
        - r-jsonlite                   # [build_platform != target_platform]
        - r-knitr                      # [build_platform != target_platform]
      host:
        - {{ pin_subpackage('libxgboost', max_pin="x.x.x.x.x.x") }}
        - libxgboost =*=rapidsai_h*_{{ PKG_BUILDNUM }}
        - r-base
        - r-matrix
        - r-data.table
        - r-magrittr
        - r-jsonlite
        - r-knitr
      run:
        - {{ pin_subpackage('libxgboost', max_pin="x.x.x.x.x.x") }}
        - libxgboost =*=rapidsai_h*_{{ PKG_BUILDNUM }}
        - r-base
        - r-matrix
        - r-data.table
        - r-magrittr
        - r-jsonlite
      test:
        files:
          - test-r-xgboost.r
        commands:
          - Rscript test-r-xgboost.r

about:
  home: https://github.com/dmlc/xgboost
  license: Apache-2.0
  license_file: LICENSE
  summary: |
    Scalable, Portable and Distributed Gradient Boosting (GBDT, GBRT or GBM) Library, for
    Python, R, Java, Scala, C++ and more. Runs on single machine, Hadoop, Spark, Flink
    and DataFlow
  description: |
    XGBoost is an optimized distributed gradient boosting library designed to be highly efficient,
    flexible and portable. It implements machine learning algorithms under the Gradient Boosting
    framework. XGBoost provides a parallel tree boosting (also known as GBDT, GBM) that solve many
    data science problems in a fast and accurate way. The same code runs on major distributed
    environment (Hadoop, SGE, MPI) and can solve problems beyond billions of examples.
  doc_url: https://xgboost.readthedocs.io/
  dev_url: https://github.com/dmlc/xgboost/

extra:
  feedstock-name: xgboost
  recipe-maintainers:
    - hcho3
    - aldanor
    - fhoehle
    - jakirkham
    - ksangeek
    - xhochy
    - mfansler
